name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Generate build
        run: npm run build
      - name: Test code
        run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000

  tag_release:
    if: ${{github.event_name == 'push' && !contains(join(github.event.commits.*.message), '#skip') }}
    needs: simple_deployment_pipeline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@a2c70ae13a881faf2b4953baaa9e49731997ab36
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  render_deployment:
    if: ${{github.event_name == 'push' && !contains(join(github.event.commits.*.message), '#skip')}}
    name: Deploy to Render
    needs: simple_deployment_pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment
        run: curl https://api.render.com/deploy/srv-${{secrets.RENDER_SERVICE_ID}}?key=${{secrets.RENDER_API_KEY}}

  discord_notify:
    needs: [simple_deployment_pipeline, render_deployment]
    runs-on: ubuntu-latest
    if: ${{needs.simple_deployment_pipeline.result == 'success' && needs.render_deployment.result == 'success'}}
    steps:
      - uses: rjstone/discord-webhook-notify@89b0bf43c2c8514f70d0dcba4a706b904e8a3112
        with:
          severity: informational
          username: Github
          description: ''
          details: ''
          footer:
          text:
          color: '#0fff50'
          webhookUrl: ${{secrets.DISCORD_WEBHOOK}}
      - run: echo ""
        env:
          RENDER_RESULT: ${{toJson(needs.render_deployment)}}
          DEPLOY_RESULT: ${{toJson(needs.simple_deployment_pipeline)}}
